# $Id: Jamfile 3140 2012-06-18 15:03:02Z susancummins $

SubDir TOP apps MDPtools ;

# Note that the local library needs to be declared and built prior to anything
# else is done.

GPSLinkLibraries mdplib : rxio gpstk ;
Library mdplib : BELogEntry.cpp MDPProcessors.cpp SummaryProc.cpp TrackProc.cpp NavProc.cpp SubframeProc.cpp UniqueAlmStore.cpp ;

# Now we can set up the things that depend upon the local library. Note that
# the LinkLibraries rule for mdplib must preceede the GPSLinkLibraries rule
# for things to build properly

LinkLibraries mdptool mdp2rinex mdpEdit mdp2fic : mdplib ;
GPSLinkLibraries mdptool mdp2rinex mdpEdit mdp2fic : rxio gpstk ;

BonkForte ;

GPSMain mdptool : mdptool.cpp ;

GPSMain mdp2rinex : mdp2rinex.cpp ;

GPSMain mdpEdit : mdpEdit.cpp ;

GPSMain mdp2fic : mdp2fic.cpp ;


# mdpscreen requires the curses/ncurses dev library to be installed.
# since I(ocibu) can't figure out how to make jam detect this automatically,
# set the variable curses to enable it. Either in the environment:
#   $ export curses=t
#   $ jam
# or on the command line
#   $ jam -scurses=t
#
if $(UNIX) && $(curses)
{
  if $(OS) = SOLARIS  {
    LINKLIBS on mdpscreenx$(SUFEXE) += -lcurses ;
  }
  else {
    LINKLIBS on mdpscreenx$(SUFEXE) += -lstdc++ -lncurses ;
  }

  LinkLibraries mdpscreenx : mdplib ;
  GPSLinkLibraries mdpscreenx : gpstk rxio ;
  GPSMain mdpscreenx : mdpscreen.cpp ScreenProc.cpp ;

  if $(OS) != CYGWIN  {
  InstallBin $(BINDIR) : mdpscreen mdpscreenx ;
  }
}
else
{
  ECHO build/install of mdpscreenx is being skipped; see jamfile ;
}
